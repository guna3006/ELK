version: '3.8'
name: elk-mysql
services:

  mysql:
    container_name: mysql-server
    hostname: mysql
    image: mysql
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./mysql/config/mysql.cnf
        target: /etc/mysql/conf.d/my.cnf
        read_only: true
      # Initialize database using SQL scripts
      - type: bind
        source: ./mysql/sql
        target: /docker-entrypoint-initdb.d
        read_only: true
      # Persist data on host machine
      - type: volume
        source: mysql
        target: /var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=temp_db
      - MYSQL_USER=system
      - MYSQL_PASSWORD=admin123
    networks:
      mysql-elk:
        ipv4_address: 20.5.0.5

  elasticsearch:
    container_name: elasticsearch-server
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      # Persist data on host machine
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      mysql-elk:
        ipv4_address: 20.5.0.6

  logstash:
    container_name: logstash-server
    hostname: logstash
    image: docker.elastic.co/logstash/logstash:8.11.1
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      # Add JDBC jar
      - type: bind
        source: ./logstash/pipeline/sql/mysql-connector-java-8.0.22.jar
        target: /usr/share/logstash/mysql-connector-java-8.0.22.jar
        read_only: true
      # List id and config path of pipelines
      - type: bind
        source: ./logstash/pipeline/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
        read_only: true
      # Add configurations of pipelines
      - type: bind
        source: ./logstash/pipeline/conf
        target: /usr/share/logstash/pipeline
        read_only: true
      # Add SQL scripts used by JDBC input plugin
      - type: bind
        source: ./logstash/pipeline/sql
        target: /usr/share/logstash/sql
        read_only: true
    ports:
      - "5044:5044"
      - "5001:5001/tcp"
      - "5001:5001/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      mysql-elk:
        ipv4_address: 20.5.0.7
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana-server
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.11.1
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      mysql-elk:
        ipv4_address: 20.5.0.8
    depends_on:
      - elasticsearch

networks:
  mysql-elk:
    driver: bridge
    ipam:
     config:
       - subnet: 20.5.0.0/16
         gateway: 20.5.0.1

volumes:
  mysql:
  elasticsearch:
